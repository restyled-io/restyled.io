version: "3"

services:
  postgres:
    image: postgres:15.3
    command: >
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off
      -c extra_float_digits=2
      -c shared_buffers=1875MB
      -c work_mem=20MB
      -c maintenance_work_mem=350MB
      -c effective_cache_size=3750MB
      -c log_min_duration_statement=0
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER"
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2
    ports:
      - 6379:6379
    volumes:
      - ./certs/redis:/tls:ro
    entrypoint: redis-server
    command: >
      --port 0
      --tls-port 6379
      --tls-cert-file /tls/redis.crt
      --tls-key-file /tls/redis.key
      --tls-ca-cert-file /tls/ca.crt
      --tls-auth-clients no
    healthcheck:
      test: >
        redis-cli
        --tls
        --cert /tls/redis.crt
        --key /tls/redis.key
        --cacert /tls/ca.crt
      interval: 10s
      timeout: 5s
      retries: 5

  agent:
    image: restyled/agent:main
    depends_on:
      - redis
    env_file: ./.env.development
    environment:
      AWS_ACCESS_KEY_ID: x
      AWS_SECRET_ACCESS_KEY: x
      LOG_LEVEL: DEBUG,Amazonka:info
      LOG_FORMAT: json
      REDIS_URL: rediss://redis
      RESTYLER_POOL_SIZE: 2
    volumes:
      - /tmp:/tmp
      - /var/run/docker.sock:/var/run/docker.sock
